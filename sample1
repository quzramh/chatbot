#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include<ctype.h>


// Struct to represent a student
struct Student {
    char name[50];
    int id;
    float score;
};



// Function to get user input and convert to lowercase
void getLowercaseInput(char* input) {
    printf("You: ");
    fgets(input, 100, stdin);
    input[strcspn(input, "\n")] = 0; // Remove the newline character from input
    for (int i = 0; input[i]; i++) {
        input[i] = tolower(input[i]);
    }
}

// Function to handle bot responses
void botResponse(const char* response) {
    printf("Bot: %s\n", response);
}

// Function to collect user details
void collectUserDetails() {
    char name[50], email[100];
    printf("Bot: Let's start by collecting some details.\n");
    printf("Bot: What is your name? ");
    fgets(name, 50, stdin);
    name[strcspn(name, "\n")] = 0;
    printf("Bot: Hi, %s! Please provide your email address: ", name);
    fgets(email, 100, stdin);
    email[strcspn(email, "\n")] = 0;
    printf("Bot: Thank you, %s! We have your details. How can I assist you ?\n", name);
}
void contactdetails(){
    botResponse("Contact details\nEmail:mite@gmail.com\nPhone:9999999999");
}
// Function to handle course registration and enrollment queries
void courseRegistrationQueries() {
    botResponse("For course registration and enrollment queries, please visit our college website or contact the admission office.");
}

// Function to handle teacher's assistant and administrative tasks
void teacherAssistantTasks() {
    botResponse("As a teacher's assistant, I can help with administrative tasks. Please let me know how I can assist you.");
}

// Function to collect customer feedback
void collectFeedback() {
    char feedback[200];
    printf("Bot: We value your feedback. Please share your thoughts with us: ");
    fgets(feedback, 200, stdin);
    feedback[strcspn(feedback, "\n")] = 0;
    botResponse("Thank you for your feedback. We appreciate your input!");
}
void listEngineeringCourses() {
    botResponse("We offer the following engineering courses:\n"
               "1. Computer Science Engineering\n"
               "2. Mechanical Engineering\n"
               "3. Electrical Engineering\n"
               "4. Civil Engineering\n"
               "5. Electronics and Communication Engineering\n");
}
void addStudent() {
   struct Student students[2];
  
    for (int i = 0; i < 2; i++) {
        printf("\nEnter details for Student %d:\n", i + 1);
        printf("Name: ");
        scanf("%s", students[i].name);
        printf("ID: ");
        scanf("%d", &students[i].id);
        printf("Score: ");
        scanf("%f", &students[i].score);
    }
   

    printf("Bot: Student added successfully!");

    printf("Bot: Here are the students in the system:");
    
    for (int i = 0; i < 2; i++) {
        printf("Student %d\n", i + 1);
        printf("Name: %s\n", students[i].name);
        printf("ID: %d\n", students[i].id);
        printf("Score: %.2f\n", students[i].score);
    }


}

// Function to handle administrative tasks
void handleAdministrativeTasks() {
    botResponse("I can assist you with various administrative tasks\nWhat would you like to do?\n1. Add a student\n2. Display all students\n5. Exit");

    char input[100];

    while (true) {
        getLowercaseInput(input);

        if (strstr(input, "exit") != NULL || strstr(input, "bye") != NULL) {
            botResponse("Goodbye! Have a great day!");
            break;
        } else if (strstr(input, "add a student") != NULL || strstr(input, "student") != NULL) {
            addStudent();
        } else if (strstr(input, "display all students ") != NULL || strstr(input, "students") != NULL) {
           // displayStudents();
        } else {
            botResponse("I'm sorry, I don't understand. Can you please rephrase your request?");
        }
    }
}
// Function to answer questions and enquiries
void answerQuestions() {
    char input[100];

    while (true) {
        getLowercaseInput(input);

        if (strstr(input, "bye") != NULL) {
            botResponse("Goodbye! Have a great day!");
            break;
        }
        else if (strstr(input, "registration") != NULL || strstr(input, "enrollment") != NULL ||strstr(input, "admission") != NULL) {
            courseRegistrationQueries();
        } else if (strstr(input, "teacher") != NULL || strstr(input, "assistant") != NULL) {
            teacherAssistantTasks();
        }else if (strstr(input, "courses") != NULL || strstr(input, "courses") != NULL) {
            listEngineeringCourses();
        } else if (strstr(input, "feedback") != NULL) {
            collectFeedback();
        } else if (strstr(input, "assistant") != NULL || strstr(input, "administrative") != NULL) {
            handleAdministrativeTasks();
        }else if (strstr(input, "contact") != NULL || strstr(input, "enrollment") != NULL) {
            contactdetails();
        } else {
            botResponse("I'm sorry, I don't understand. Can you please rephrase your question?");
        }
    }
}

int main() {
    botResponse("Hello! I am an EducationBot.");
    collectUserDetails();
    answerQuestions();

    return 0;
}
